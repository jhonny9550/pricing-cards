{"version":3,"sources":["colors.js","Switch.js","PriceCard.js","App.js","serviceWorker.js","index.js"],"names":["styles","StyleSheet","create","root","alignItems","display","justifyContent","maxWidth","label","color","colors","fontSize","fontWeight","toggle","backgroundImage","borderRadius","height","position","width","cursor","marginLeft","marginRight","handler","backgroundColor","top","left","animationDuration","animatedRight","animationName","transform","animatedLeft","Switch","props","className","labels","onToggle","useState","value","setValue","animated","setAnimated","handleToggle","useCallback","v","val","css","onClick","textAlign","padding","minWidth","zIndex","price","feature","paddingTop","paddingBottom","borderBottom","borderColor","margin","first","borderTop","button","textTransform","letterSpacing","border","highlighted","highlightedText","highlightedButton","PriceCard","title","features","handleClick","list","map","f","i","key","PRICE_VALUES","basic","proffessional","master","app","overflow","switch","cards","flexDirection","card","marginBottom","marginTop","bgIcon","bgTop","right","bgBottom","bottom","App","prices","setPrices","src","process","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.999f3532.chunk.js","sourcesContent":["export default {\r\n  primary: 'hsl(237, 63%, 64%)',\r\n  light: 'hsl(236, 72%, 79%)',\r\n  background: 'hsl(240, 78%, 98%)',\r\n  dark: 'hsl(232, 13%, 33%)',\r\n  paper: '#FFF',\r\n  medium: '#e2e2e2'\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport colors from './colors';\r\n\r\nconst Switch = props => {\r\n  const { className, labels, onToggle } = props;\r\n\r\n  // Set first labels array value to the value property from component state\r\n  const [value, setValue] = useState(labels[0]);\r\n  const [animated, setAnimated] = useState(null);\r\n\r\n  /**\r\n   * This function keeps listen value changes for value, labels and onToggle props\r\n   * It means when some of these property changes it will be recreated\r\n   * Important: animated prop will have 3 different values: null, 'left' and 'right'.\r\n   * These values will be used for fire the handle element animations\r\n   */\r\n  const handleToggle = useCallback(() => {\r\n    if (value === labels[1]) {\r\n      setAnimated('left');\r\n    }\r\n    if (value === labels[0]) {\r\n      setAnimated('right');\r\n    }\r\n    setValue(v => {\r\n      const val = v === labels[0] ? labels[1] : labels[0];\r\n      if (onToggle) {\r\n        onToggle(val);\r\n      }\r\n      return val;\r\n    });\r\n  }, [value, labels, onToggle]);\r\n\r\n  return (\r\n    <>\r\n      <div className={css(styles.root, className)}>\r\n        <span className={css(styles.label)}>{labels[0]}</span>\r\n        <div className={css(styles.toggle)} onClick={handleToggle}>\r\n          <div\r\n            className={css(\r\n              styles.handler,\r\n              animated === 'right' && styles.animatedRight,\r\n              animated === 'left' && styles.animatedLeft\r\n            )}\r\n          ></div>\r\n        </div>\r\n        <span className={css(styles.label)}>{labels[1]}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst translateKeyRightFrames = {\r\n  '0%': {\r\n    transform: 'translateX(0)'\r\n  },\r\n  '100%': {\r\n    transform: 'translateX(28px)'\r\n  }\r\n};\r\n\r\nconst translateKeyLeftFrames = {\r\n  '0%': {\r\n    transform: 'translateX(28px)'\r\n  },\r\n  '100%': {\r\n    transform: 'translateX(0px)'\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    maxWidth: 500\r\n  },\r\n  label: {\r\n    color: colors.primary,\r\n    fontSize: 14,\r\n    fontWeight: 700\r\n  },\r\n  toggle: {\r\n    backgroundImage:\r\n      `linear-gradient(to right, ${colors.light}, ${colors.primary})`,\r\n    borderRadius: 40,\r\n    height: 33,\r\n    position: 'relative',\r\n    width: 60,\r\n    cursor: 'pointer',\r\n    marginLeft: 24,\r\n    marginRight: 24\r\n  },\r\n  handler: {\r\n    borderRadius: '50%',\r\n    backgroundColor: colors.paper,\r\n    height: 26,\r\n    width: 26,\r\n    position: 'absolute',\r\n    top: 3,\r\n    left: 3,\r\n    animationDuration: '0.5s, 1200ms'\r\n  },\r\n  animatedRight: {\r\n    animationName: [translateKeyRightFrames],\r\n    transform: 'translateX(28px)'\r\n  },\r\n  animatedLeft: {\r\n    animationName: [translateKeyLeftFrames],\r\n    transform: 'translateX(0px)'\r\n  }\r\n});\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport colors from './colors';\r\n\r\nconst PriceCard = props => {\r\n  const { className, title, price, features, handleClick, highlighted } = props;\r\n\r\n  return (\r\n    <div\r\n      className={css(styles.root, className, highlighted && styles.highlighted)}\r\n    >\r\n      <h3 className={css(styles.title, highlighted && styles.highlightedText)}>\r\n        {title}\r\n      </h3>\r\n      <h1 className={css(styles.price, highlighted && styles.highlightedText)}>\r\n        ${price}\r\n      </h1>\r\n      <div className={css(styles.list)}>\r\n        {/* Create a line with custom style for each array item */}\r\n        {features &&\r\n          features.map((f, i) => (\r\n            <div\r\n              key={i}\r\n              className={css(\r\n                styles.feature,\r\n                i === 0 && styles.first,\r\n                highlighted && styles.highlightedText\r\n              )}\r\n            >\r\n              {f}\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <button\r\n        className={css(styles.button, highlighted && styles.highlightedButton)}\r\n        onClick={handleClick}\r\n      >\r\n        Learn more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    backgroundColor: colors.paper,\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    minWidth: 300,\r\n    zIndex: 1,\r\n    '@media (max-width: 400px)': {\r\n      minWidth: 250\r\n    }\r\n  },\r\n  price: {\r\n    fontSize: 54,\r\n    fontWeight: 'bold',\r\n    '@media (max-width: 400px)': {\r\n      fontSize: 42\r\n    }\r\n  },\r\n  feature: {\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    borderBottom: '1px solid',\r\n    borderColor: colors.medium,\r\n    maxWidth: '85%',\r\n    color: colors.dark,\r\n    margin: '0 auto',\r\n    fontWeight: 700\r\n  },\r\n  first: {\r\n    borderTop: '1px solid',\r\n    borderColor: colors.medium\r\n  },\r\n  button: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 600,\r\n    fontSize: 12,\r\n    margin: '24px 0',\r\n    letterSpacing: 1,\r\n    backgroundImage: `linear-gradient(to right, ${colors.light}, ${colors.primary})`,\r\n    border: '1px solid transparent',\r\n    padding: '13px 54px',\r\n    borderRadius: 5,\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      backgroundImage: 'none',\r\n      backgroundColor: 'transparent',\r\n      color: colors.primary,\r\n      border: '1px solid',\r\n      borderColor: colors.primary\r\n    }\r\n  },\r\n  highlighted: {\r\n    backgroundImage: `linear-gradient(135deg, ${colors.light} 10%, ${colors.primary})`,\r\n    transform: 'scale(1.1)',\r\n    zIndex: 2,\r\n    '@media (max-width: 980px)': {\r\n      transform: 'none'\r\n    }\r\n  },\r\n  highlightedText: {\r\n    color: 'white'\r\n  },\r\n  highlightedButton: {\r\n    backgroundColor: 'white',\r\n    backgroundImage: 'none',\r\n    color: colors.primary,\r\n    ':hover': {\r\n      backgroundColor: 'transparent',\r\n      color: 'white',\r\n      border: '1px solid white'\r\n    }\r\n  }\r\n});\r\n\r\nexport default PriceCard;\r\n","import React, { useState, useCallback } from 'react';\r\nimport Switch from './Switch';\r\nimport PriceCard from './PriceCard';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport colors from './colors';\r\n\r\n// Think this came from an API\r\nconst PRICE_VALUES = {\r\n  anually: {\r\n    basic: 199.99,\r\n    proffessional: 249.99,\r\n    master: 399.99\r\n  },\r\n  monthly: {\r\n    basic: 19.99,\r\n    proffessional: 24.99,\r\n    master: 39.99\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  // Setup initial info\r\n  const [prices, setPrices] = useState(PRICE_VALUES.anually);\r\n\r\n  /**\r\n   * This function handle when the toggle value is changing.\r\n   * It's gonna changes the prices value based on the component callback (cb)\r\n   * TIP: UseCallback avoid to create unuseful new functions on every update/change/render\r\n   */\r\n  const handleToggle = useCallback(v => {\r\n    if (v === 'Anually') {\r\n      setPrices(PRICE_VALUES.anually);\r\n    }\r\n    if (v === 'Monthly') {\r\n      setPrices(PRICE_VALUES.monthly);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css(styles.app)}>\r\n      <img\r\n        className={css(styles.bgIcon, styles.bgBottom)}\r\n        // proccess.env.PUBLIC_URL means the host URL, wherever it's gonna be hosted\r\n        // It just points to local URL\r\n        src={`${process.env.PUBLIC_URL}/assets/images/bg-bottom.svg`}\r\n        alt='Background'\r\n      />\r\n      <img\r\n        className={css(styles.bgIcon, styles.bgTop)}\r\n        src={`${process.env.PUBLIC_URL}/assets/images/bg-top.svg`}\r\n        alt='Background'\r\n      />\r\n      <h1>Our Pricing</h1>\r\n      <Switch\r\n        className={styles.switch}\r\n        labels={['Anually', 'Monthly']}\r\n        onToggle={handleToggle}\r\n      />\r\n      <div className={css(styles.cards)}>\r\n        <PriceCard\r\n          title='Basic'\r\n          price={prices.basic}\r\n          features={['500 GB Storage', '2 Users Allowed', 'Send up to 3 GB']}\r\n          className={styles.card}\r\n        />\r\n        <PriceCard\r\n          title='Proffessional'\r\n          price={prices.proffessional}\r\n          features={['1 TB Storage', '5 Users Allowed', 'Send up to 10 GB']}\r\n          className={styles.card}\r\n          highlighted\r\n        />\r\n        <PriceCard\r\n          title='Master'\r\n          price={prices.master}\r\n          features={['2 TB Storage', '10 Users Allowed', 'Send up to 20 GB']}\r\n          className={styles.card}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Default stylesheet using aphrodite\r\nconst styles = StyleSheet.create({\r\n  app: {\r\n    backgroundColor: colors.background,\r\n    height: 'calc(100% - 24px)',\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    padding: 12,\r\n    // Aphrodite responsive style 😎\r\n    '@media (max-width: 980px)': {\r\n      height: 'auto'\r\n    }\r\n  },\r\n  switch: {\r\n    margin: '48px auto'\r\n  },\r\n  cards: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: 12,\r\n    '@media (max-width: 980px)': {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'space'\r\n    }\r\n  },\r\n  card: {\r\n    '@media (max-width: 980px)': {\r\n      marginBottom: 24,\r\n      marginTop: 24\r\n    }\r\n  },\r\n  bgIcon: {\r\n    position: 'absolute',\r\n    zIndex: 0,\r\n    '@media (max-width: 980px)': {\r\n      height: 'auto',\r\n      width: 150\r\n    }\r\n  },\r\n  bgTop: {\r\n    right: 0,\r\n    top: 0,\r\n    '@media (max-width: 980px)': {\r\n      right: -70\r\n    }\r\n  },\r\n  bgBottom: {\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}